{"version":3,"sources":["components/footer.js","components/header.js","components/cardGrid.js","components/images/imageOne.png","components/images/ImageTwo.JPG","components/images/imageThree.jpg","components/images/ImageFour.jpg","components/images/ImageFive.jpg","components/images/imageSix.jpg","components/images/imageSeven.jpg","components/images/imageEight.png","components/scorecounter.js","components/hiScoreCounter.js","index.js"],"names":["footer","className","href","header","card_list","id","selected","name","image","game_Data","score","hiScore","CardGrid","CurrentScore","CurrentHiScore","useState","cards","setCards","uodateScore","forEach","element","new_card_list","sort","Math","random","map","onClick","alt","src","shuffleCards","scoreCounter","data","hiScoreCounter","App","currentScore","updateCurrentScore","currentHiScore","updateCurrentHiScore","render","window","document","getElementById"],"mappings":"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","file":"static/js/main.a4cd4ed8.chunk.js","sourcesContent":["import './styles.css';\n\nfunction footer() {\n    return(\n        <div className=\"footer\">\n            <h1 className=\"footer_text\"> made by Connor M on</h1> \n            <a className=\"footer_link\" href=\"https://github.com/jediknight813/\"> github </a>\n        </div>\n    );\n}\n\nexport default footer\n","import './styles.css';\n\nfunction header() {\n    return(\n        <div className=\"header\">\n            <h1 className=\"header_text\"> memoria ludum </h1>\n        </div>\n    );\n}\n\nexport default header\n","import { useState } from 'react';\nimport './styles.css';\n\nimport imageOne from './images/imageOne.png'\nimport imageTwo from './images/ImageTwo.JPG'\nimport imageThree from './images/imageThree.jpg'\nimport imageFour from './images/ImageFour.jpg'\nimport imageFive from './images/ImageFive.jpg'\nimport imageSix from './images/imageSix.jpg'\nimport imageSeven from './images/imageSeven.jpg'\nimport imageEight from './images/imageEight.png'\n\n\nconst card_list = [{id: 0, selected: false, name: \"bob\", image: imageOne }, {id: 1, selected: false, name: \"dave\", image: imageTwo}, {id: 2, selected: false, name: \"dave\", image: imageThree}, {id: 3, selected: false, name: \"dave\", image: imageFour}, {id: 4, selected: false, name: \"dave\", image: imageFive}, {id: 5, selected: false, name: \"dave\", image: imageSix}, {id: 6, selected: false, name: \"dave\", image: imageSeven}, {id: 7, selected: false ,name: \"dave\", image: imageEight}]\nconst game_Data = {score: 0, hiScore: 0}\n\n\nconst CardGrid = ({ CurrentScore, CurrentHiScore }) => {\n    const [cards, setCards] = useState()\n    useState(() => {\n        setCards(\n            <div className=\"card_grid\">{\n                card_list.map(cards =>\n                <div className=\"card\" key={Math.random()}>\n                    <img onClick={() => uodateScore(cards.id, cards.selected)} className=\"cardClass\" alt={cards.name} src={cards.image} /> \n                </div>)}\n            </div>  \n    )}, []);\n\n\n    function uodateScore(id, selected) {\n        card_list.forEach(element => \n        {if (element['id'] === id) {\n            if (element['selected'] === false){\n                game_Data['score'] += 1\n                element['selected'] = true\n            }\n            else {\n                game_Data['score'] = 0\n                resetCards(card_list)\n            }\n            \n        }}    \n        );\n\n        if (game_Data['score'] > game_Data['hiScore']) {\n            game_Data['hiScore'] = game_Data['score']\n        }\n\n        shuffleCards()\n\n      }\n\n\n      function resetCards(dict){\n          dict.forEach(element => {\n              element['selected'] = false\n          })\n      }\n      \n\n\n    function shuffleCards() {\n        let new_card_list = card_list.sort(() => Math.random() - Math.random())\n        CurrentScore(game_Data['score'])\n        CurrentHiScore(game_Data['hiScore'])\n        setCards(\n            <div className=\"card_grid\">{\n                new_card_list.map(cards =>\n                <div className=\"card\" key={Math.random()}>\n                    <img onClick={() => uodateScore(cards.id, cards.selected)} className=\"cardClass\" alt={cards.name} src={cards.image} /> \n                </div>)}\n            </div>  )}\n\n    \n    return(\n        cards\n    );\n\n\n}\n\n\nexport default CardGrid\n\n","export default __webpack_public_path__ + \"static/media/imageOne.f153940e.png\";","export default __webpack_public_path__ + \"static/media/ImageTwo.1b35ec0c.JPG\";","export default __webpack_public_path__ + \"static/media/imageThree.572a4964.jpg\";","export default __webpack_public_path__ + \"static/media/ImageFour.8368b57a.jpg\";","export default __webpack_public_path__ + \"static/media/ImageFive.b0761e0d.jpg\";","export default __webpack_public_path__ + \"static/media/imageSix.53f8ab84.jpg\";","export default __webpack_public_path__ + \"static/media/imageSeven.71ba05c2.jpg\";","export default __webpack_public_path__ + \"static/media/imageEight.e73faf1d.png\";","import './styles.css';\n\n\nfunction scoreCounter(data) {\n    return(\n        <div className=\"scoreCounter\">\n            <h1> Score: {data['data']} </h1>\n        </div>\n    );\n}\n\n\nexport default scoreCounter\n","import './styles.css';\n\n\nfunction hiScoreCounter(data) {\n    return(\n        <div className=\"hiScoreCounter\">\n            <h1> Hi-Score: {data['data']} </h1>\n        </div>\n    );\n}\n\n\nexport default hiScoreCounter\n","import React from 'react';\n//import ReactDOM from 'react-dom';\n//import App from './App';\n//import Card from './components/card';\nimport Footer from './components/footer';\nimport Header from './components/header';\nimport CardGrid from './components/cardGrid';\nimport ScoreCounter from './components/scorecounter';\nimport HiScoreCounter from './components/hiScoreCounter';\nimport { render } from '@testing-library/react';\nimport { useState } from 'react/cjs/react.development';\n\n\nfunction App() {\n  const [currentScore, updateCurrentScore] = useState(0)\n  const [currentHiScore, updateCurrentHiScore] = useState(0)\n\n\n  const CurrentScore = (score) => {\n    updateCurrentScore(score);\n  }\n\n  const CurrentHiScore = (score) => {\n    updateCurrentHiScore(score);\n  }\n\n\n\n    return (\n      <div>\n        <Header />\n        <ScoreCounter data={currentScore} />\n        <HiScoreCounter data={currentHiScore} />\n        <CardGrid CurrentScore={CurrentScore} CurrentHiScore={CurrentHiScore} />\n        <Footer /> \n      </div>\n    )\n  }\n\n\nrender(<App/>, window.document.getElementById(\"root\") )\n\n"],"sourceRoot":""}